- name: check ui archive stat
  stat: path={{ consul_download_folder }}/{{ consul_ui_archive }}
  register: consul_archive_ui_stat

- name: create consul_ui_dir if it does not exist
  file:
    path: "{{ consul_ui_dir }}"
    state: directory
    mode: 0755
  when: consul_version | version_compare('0.6.1', '<')

- name: download consul ui
  get_url: >
    url={{consul_ui_download}}
    dest={{consul_download_folder}}
  register: consul_ui_was_downloaded
  when: consul_version | version_compare('0.6.1', '<') and consul_archive_ui_stat.stat.exists == False

- name: create ui dir
  file: path={{ consul_ui_dir }} state=directory
  when: consul_version | version_compare('0.6.1', '<')

- name: copy and unpack ui
  unarchive: >
    src={{ consul_download_folder }}/{{ consul_ui_archive }}
    dest={{ consul_ui_dir }}
    copy=no
  when: consul_ui_was_downloaded.changed

- name: set ownership
  file: >
    state=directory
    path={{consul_ui_dir}}
    owner={{consul_user}}
    group={{consul_group}}
    recurse=yes
  when: consul_ui_was_downloaded.changed

- name: consul nginx config
  template: >
    src={{consul_ui_nginx_template}}
    dest=/etc/nginx/sites-available/consul
    owner=root
    group=root
    mode=0755
  when: consul_install_nginx_config and ansible_os_family == "Debian"
  notify:
    - consul reload nginx

- name: consul nginx config enable
  file: >
    state=link
    src=/etc/nginx/sites-available/consul
    path=/etc/nginx/sites-enabled/consul
    owner=root
    group=root
    mode=0755
  when: consul_is_ui and consul_enable_nginx_config and ansible_os_family == "Debian"
  notify:
  - consul reload nginx

- name: consul nginx config
  template: >
    src={{consul_ui_nginx_template}}
    dest=/etc/nginx/conf.d/consul.conf
    owner=root
    group=root
    mode=0755
  when: consul_is_ui and consul_install_nginx_config and ansible_os_family == "RedHat"
  notify:
    - consul reload nginx

- name: Install python module to manage selinux
  package:
    name: libsemanage-python
    state: present
  when: consul_is_ui and consul_install_nginx_config and ansible_os_family == "RedHat"

- name: allow nginx to connect to consul (selinux)
  seboolean: name=httpd_can_network_connect state=yes persistent=yes
  when: consul_is_ui and consul_install_nginx_config and ansible_selinux is defined and ansible_selinux.status == 'enabled'
